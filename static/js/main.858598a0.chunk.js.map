{"version":3,"sources":["api/index.js","components/AddToTodoList.js","components/Task.js","components/Tasks.js","components/App.js","index.js"],"names":["_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","done","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","getTodos","_ref","_asyncToGenerator","_callee","response","json","_context","fetch","t0","console","log","apply","arguments","addTaskToServer","_ref2","_callee2","body","_context2","JSON","stringify","headers","Content-type","_x","updateTask","_ref3","_callee3","id","title","_context3","concat","_x2","_x3","updateTaskStatus","_ref4","_callee4","completed","_context4","_x4","_x5","deleteTask","AddToTodoList","props","handleAddTask","_useState","useState","_useState2","_slicedToArray","taskTitle","setTaskTitle","React","createElement","className","placeholder","onChange","e","target","onClick","Task","edit","setEdit","task","handleChangeTitle","handleDeleteTask","handleCompleted","_useState3","_useState4","checkBox","setCheckBox","_useState5","_useState6","setTitle","handleChangeEdit","defaultChecked","checked","defaultValue","htmlFor","src","alt","Tasks","tasks","map","App","_React$Component","_this","_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","componentDidMount","serverTasks","setState","newTitle","newTask","_objectSpread","newtaskTitle","newTaskToAdd","servernewTask","userId","Date","now","_toConsumableArray","filter","newTasks","_inherits","_createClass","Component","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.858598a0.chunk.js","sourcesContent":["export const getTodos = async () => {\r\n  try {\r\n    const response = await fetch(\"https://jsonplaceholder.typicode.com/todos\");\r\n    const json = await response.json();\r\n    return json;\r\n  } catch (error) {\r\n    console.log(\"server not connected\", error);\r\n  }\r\n};\r\n\r\nexport const addTaskToServer = async (body) => {\r\n  try {\r\n    const response = await fetch(\"https://jsonplaceholder.typicode.com/todos\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(body),\r\n      headers: {\r\n        \"Content-type\": \"application/json; charset=UTF-8\",\r\n      },\r\n    });\r\n    const json = await response.json();\r\n    console.log(\"addTaskToServer api :\", json);\r\n    return json;\r\n  } catch (error) {\r\n    console.log(\"error in adding task to server\", error);\r\n  }\r\n};\r\n\r\nexport const updateTask = async (id, title) => {\r\n  try {\r\n    const response = await fetch(\r\n      `https://jsonplaceholder.typicode.com/todos/${id}`,\r\n      {\r\n        method: \"PATCH\",\r\n        body: JSON.stringify({\r\n          title,\r\n        }),\r\n        headers: {\r\n          \"Content-type\": \"application/json; charset=UTF-8\",\r\n        },\r\n      }\r\n    );\r\n    const json = await response.json();\r\n    console.log(\"updatedTaskToServer api :\", json);\r\n    return json;\r\n  } catch (error) {\r\n    console.log(\"updatedTaskToServer api error :\", error);\r\n  }\r\n};\r\nexport const updateTaskStatus = async (id, completed) => {\r\n  try {\r\n    const response = await fetch(\r\n      `https://jsonplaceholder.typicode.com/todos/${id}`,\r\n      {\r\n        method: \"PATCH\",\r\n        body: JSON.stringify({\r\n          completed,\r\n        }),\r\n        headers: {\r\n          \"Content-type\": \"application/json; charset=UTF-8\",\r\n        },\r\n      }\r\n    );\r\n    const json = await response.json();\r\n    console.log(\"updatedTaskStatusToServer api :\", json);\r\n    return json;\r\n  } catch (error) {\r\n    console.log(\"updatedTaskToServer api error :\", error);\r\n  }\r\n};\r\n\r\nexport const deleteTask = (id) => {\r\n  fetch(`https://jsonplaceholder.typicode.com/posts/${id}`, {\r\n    method: \"DELETE\",\r\n  });\r\n  console.log(\"task id deleted from the server\");\r\n};\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nfunction AddToTodoList(props) {\r\n  const { handleAddTask } = props;\r\n  const [taskTitle, setTaskTitle] = useState(\"\");\r\n  const handleChange = (e) => {\r\n    setTaskTitle(e.target.value);\r\n  };\r\n  return (\r\n    <div className=\"AddTodoContainer\">\r\n      <span>Todo List</span>\r\n      <div className=\"addTodo\">\r\n        <input placeholder=\"Create new task\" onChange={handleChange} />\r\n        {/* <div className=\"inputAddButton\"> */}\r\n        <button onClick={() => handleAddTask(taskTitle)}>Add Task</button>\r\n        {/* </div> */}\r\n      </div>\r\n      <div className=\"horizontalLine\"></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddToTodoList;\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nconst Task = (props) => {\r\n  const [edit, setEdit] = useState(false);\r\n  const { task, handleChangeTitle, handleDeleteTask, handleCompleted } = props;\r\n  const [checkBox, setCheckBox] = useState(task.completed);\r\n  const [title, setTitle] = useState(task.title);\r\n  const handleChangeEdit = (val) => {\r\n    setEdit(val);\r\n  };\r\n  const checkboxToggle = (val) => {\r\n    setCheckBox(val);\r\n    handleCompleted(task.id, val);\r\n  };\r\n\r\n  return (\r\n    <div className=\"taskContainer\" id={`taskContainer-${task.id}`}>\r\n      <input\r\n        type=\"checkbox\"\r\n        id={task.id}\r\n        defaultChecked={checkBox}\r\n        onChange={(e) => checkboxToggle(e.target.checked)}\r\n      />\r\n      {edit ? (\r\n        <input\r\n          defaultValue={title}\r\n          type=\"text\"\r\n          onChange={(e) => setTitle(e.target.value)}\r\n        />\r\n      ) : (\r\n        <label htmlFor={task.id}>{title}</label>\r\n      )}\r\n      <div className=\"rightAction\">\r\n        {edit ? (\r\n          <img\r\n            src=\"https://cdn0.iconfinder.com/data/icons/leading-international-corporate-website-app-collec/16/Hook-256.png\"\r\n            alt=\"this is a if action right\"\r\n            onClick={() => {\r\n              handleChangeEdit(false);\r\n              handleChangeTitle(task.id, title);\r\n            }}\r\n          />\r\n        ) : (\r\n          <img\r\n            src=\"https://cdn4.iconfinder.com/data/icons/basic-ui-2-line/32/pencil-edit-write-draw-stationary-256.png\"\r\n            alt=\"this is a if edit\"\r\n            onClick={() => handleChangeEdit(true)}\r\n          />\r\n        )}\r\n        <img\r\n          src=\"https://cdn3.iconfinder.com/data/icons/font-awesome-regular-1/512/trash-can-256.png\"\r\n          alt=\"this is a if action delete\"\r\n          onClick={() => handleDeleteTask(task.id)}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n","import React from \"react\";\r\nimport Task from \"./Task\";\r\nfunction Tasks(props) {\r\n  const { tasks, handleChangeTitle, handleDeleteTask, handleCompleted } = props;\r\n  return (\r\n    <div className=\"tasksContainer\">\r\n      {tasks.length > 0 &&\r\n        tasks.map((task) => {\r\n          return (\r\n            <Task\r\n              task={task}\r\n              key={task.id}\r\n              handleChangeTitle={handleChangeTitle}\r\n              handleDeleteTask={handleDeleteTask}\r\n              handleCompleted={handleCompleted}\r\n            />\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Tasks;\r\n","import React from \"react\";\nimport {\n  getTodos,\n  addTaskToServer,\n  updateTask,\n  updateTaskStatus,\n  deleteTask,\n} from \"../api\";\nimport AddToTodoList from \"./AddToTodoList\";\nimport Tasks from \"./Tasks\";\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      tasks: [],\n    };\n  }\n  componentDidMount = async () => {\n    const serverTasks = (await getTodos()) ? await getTodos() : [];\n    // console.log(\"getTodos\", serverTasks);\n    this.setState({\n      tasks: serverTasks,\n    });\n  };\n  handleChangeTitle = async (id, newTitle) => {\n    const tasks = this.state.tasks;\n    const newTask = tasks.map((task) => {\n      const title = newTitle;\n      return task.id === id && newTitle ? { ...task, title } : task;\n    });\n\n    const taskToChangeInServer = await updateTask(id, newTitle);\n    if (taskToChangeInServer) {\n      this.setState(\n        () => {\n          return {\n            tasks: newTask,\n          };\n        },\n        () => console.log(\"changedTasks: \", this.state.tasks)\n      );\n    }\n  };\n  handleAddTask = async (newtaskTitle) => {\n    // console.log(\"newTaskTitle :\", newtaskTitle);\n\n    if (newtaskTitle.length > 0) {\n      const tasks = this.state.tasks;\n      const newTaskToAdd = {\n        userId: 1,\n        id: Date.now(),\n        title: newtaskTitle,\n        completed: false,\n      };\n      console.log(\"newTaskToAdd :\", newTaskToAdd);\n\n      const servernewTask = await addTaskToServer(newTaskToAdd);\n      console.log(\"servernewTask :\", servernewTask);\n      if (servernewTask) {\n        this.setState(\n          () => {\n            return {\n              tasks: [newTaskToAdd, ...tasks],\n            };\n          },\n          () => console.log(\"state,task\", this.state.tasks)\n        );\n      }\n    } else {\n      return;\n    }\n  };\n  handleDeleteTask = (id) => {\n    const tasks = this.state.tasks;\n    const newTask = tasks.filter((task) => task.id !== id);\n    deleteTask(id);\n    this.setState(() => {\n      return {\n        tasks: newTask,\n      };\n    });\n  };\n  handleCompleted = async (id, checkBox) => {\n    const tasks = this.state.tasks;\n    const completed = checkBox;\n    const newTasks = tasks.map((task) => {\n      return task.id === id ? { ...task, completed } : task;\n    });\n    const taskStatusToChangeInServer = await updateTaskStatus(id, checkBox);\n    if (taskStatusToChangeInServer) {\n      this.setState(\n        () => {\n          return {\n            tasks: newTasks,\n          };\n        }\n        // () => console.log(\"changedTasks: \", this.state.tasks)\n      );\n    } else {\n    }\n  };\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"TodolistContainer\">\n          <AddToTodoList handleAddTask={this.handleAddTask} />\n          <span>Tasks</span>\n          <Tasks\n            tasks={this.state.tasks}\n            handleChangeTitle={this.handleChangeTitle}\n            handleDeleteTask={this.handleDeleteTask}\n            handleCompleted={this.handleCompleted}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./styles/index.css\";\nimport App from \"./components/App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}